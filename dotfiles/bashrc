#
# .bashrc
#

# grep -----------------------------------------------------------
# GREP_COLORは、検索ワードを色づけするために使用。
# 色づけすると、視認性が格段にあがる。
# -Eオプションは、拡張正規表現を使用する場合に指定
export GREP_COLOR='1;37;41'
alias grep='grep -E --color=auto'

# Aliases --------------------------------------------------------
alias ll='ls -l'

# lsのカラー化
export LS_COLORS='no=01;37:fi=00:di=01;36:ln=01;32:pi=40;33:so=01;35:bd=40;33;01:cd=40;33;01:or=40;32;01:ex=01;33:*core=01;31:'
alias ls='gls --color=auto'
eval $(gdircolors ~/.dircolors-solarized)

# Git
source /usr/local/etc/bash_completion.d/git-prompt.sh
source /usr/local/etc/bash_completion.d/git-completion.bash
alias git='hub'

# Vim
alias vi='vim'

# Terraform
alias tf='terraform'

# Heroku
alias hrk='heroku'

# bash-completion
if [ -f `brew --prefix`/etc/bash_completion ]; then
     . `brew --prefix`/etc/bash_completion
fi
source <(kubectl completion zsh)

# プロンプトの表示を変更
GIT_PS1_SHOWDIRTYSTATE=true
export PS1='\W\[\033[31m\]$(__git_ps1 [%s])\[\033[00m\]\$ '

export PATH="$HOME/.tfenv/bin:/usr/local/tflint/bin:$HOME/.rbenv/bin:/usr/local/bin/:$PATH"
# rbenv
eval "$(rbenv init -)"
# direnv
eval "$(direnv hook bash)"

# goenv
export GOPATH=$HOME/go
export GOENV_ROOT=$HOME/.goenv
export GOENV_DISABLE_GOPATH=1
export PATH="$GOENV_ROOT/bin:$PATH"
eval "$(goenv init -)"

# pyenv
export PATH=$PATH:$GOPATH/bin
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

# nvm
export NVM_DIR="$HOME/.nvm"
source $(brew --prefix nvm)/nvm.sh
[ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/usr/local/opt/nvm/etc/bash_completion.d/nvm" ] && . "/usr/local/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion
export EDITOR=vim

# tfenv
complete -C /usr/local/Cellar/tfenv/0.5.2/versions/0.10.7/terraform terraform
eval "$(gh completion -s bash)"


# 便利コマンド
alias myip='curl inet-ip.info'

echo "Open tmux Default"
if [ -z "$TMUX" -a -z "$STY" ]; then
    if type tmuxx >/dev/null 2>&1; then
        tmuxx
    elif type tmux >/dev/null 2>&1; then
        if tmux has-session && tmux list-sessions | /usr/bin/grep -qE '.*]$'; then
            tmux attach && echo "tmux attached session "
        else
            tmux new-session && echo "tmux created new session"
        fi
    elif type screen >/dev/null 2>&1; then
        screen -rx || screen -D -RR
    fi
fi
